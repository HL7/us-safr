{
  "resourceType": "Library",
  "id": "BedCapacityMeasure",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.11.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": false
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": false
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "None"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  } ],
  "url": "http://hl7.org/fhir/us/safr/Library/BedCapacityMeasure",
  "version": "1.0.0",
  "name": "BedCapacityMeasure",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://hl7.org/fhir/us/safr/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system LocationPhysicalType",
    "resource": "http://terminology.hl7.org/CodeSystem/location-physical-type"
  }, {
    "type": "depends-on",
    "display": "Code system HealthcareCapacity",
    "resource": "http://hl7.org/fhir/us/safr/CodeSystem/us-safr-bed-capacity-example-codes"
  }, {
    "type": "depends-on",
    "display": "Value set Emergency Department Visit",
    "resource": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
  } ],
  "parameter": [ {
    "name": "Measurement Period",
    "use": "in",
    "min": 0,
    "max": "1",
    "type": "Period"
  }, {
    "name": "Location",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Location"
  }, {
    "name": "Bed Initial Population",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Has Qualifying Encounter at Location",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "ED Encounters At Location",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "LocationIsHOSP",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "LocationIsIPF",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "LocationIsIRF",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "LocationIsCHLD",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "LocationIsOTH",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Occupation Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Emergency Department Bed Occupied Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Bed Type Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Age Group Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Care Level Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Specialty Unit Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Surge Status Stratification",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  } ],
  "dataRequirement": [ {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "period" ]
  }, {
    "type": "Encounter",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Encounter" ],
    "mustSupport": [ "type", "period", "status" ],
    "codeFilter": [ {
      "path": "type",
      "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.117.1.7.1.292"
    } ]
  }, {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ]
  }, {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ]
  }, {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ]
  }, {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ]
  }, {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ]
  }, {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ],
    "mustSupport": [ "coding" ]
  }, {
    "type": "Location",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Location" ],
    "mustSupport": [ "coding" ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}